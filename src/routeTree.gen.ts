/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as EpicRouteImport } from './routes/epic/route'
import { Route as IndexImport } from './routes/index'
import { Route as EpicIndexImport } from './routes/epic/index'
import { Route as EpicEpicIdIndexImport } from './routes/epic/$epicId/index'
import { Route as EpicEpicIdMilestonesIndexImport } from './routes/epic/$epicId/milestones/index'
import { Route as EpicEpicIdEditIndexImport } from './routes/epic/$epicId/edit/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const EpicRouteRoute = EpicRouteImport.update({
  path: '/epic',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EpicIndexRoute = EpicIndexImport.update({
  path: '/',
  getParentRoute: () => EpicRouteRoute,
} as any)

const EpicEpicIdIndexRoute = EpicEpicIdIndexImport.update({
  path: '/$epicId/',
  getParentRoute: () => EpicRouteRoute,
} as any)

const EpicEpicIdMilestonesIndexRoute = EpicEpicIdMilestonesIndexImport.update({
  path: '/$epicId/milestones/',
  getParentRoute: () => EpicRouteRoute,
} as any)

const EpicEpicIdEditIndexRoute = EpicEpicIdEditIndexImport.update({
  path: '/$epicId/edit/',
  getParentRoute: () => EpicRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/epic': {
      id: '/epic'
      path: '/epic'
      fullPath: '/epic'
      preLoaderRoute: typeof EpicRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/epic/': {
      id: '/epic/'
      path: '/'
      fullPath: '/epic/'
      preLoaderRoute: typeof EpicIndexImport
      parentRoute: typeof EpicRouteImport
    }
    '/epic/$epicId/': {
      id: '/epic/$epicId/'
      path: '/$epicId'
      fullPath: '/epic/$epicId'
      preLoaderRoute: typeof EpicEpicIdIndexImport
      parentRoute: typeof EpicRouteImport
    }
    '/epic/$epicId/edit/': {
      id: '/epic/$epicId/edit/'
      path: '/$epicId/edit'
      fullPath: '/epic/$epicId/edit'
      preLoaderRoute: typeof EpicEpicIdEditIndexImport
      parentRoute: typeof EpicRouteImport
    }
    '/epic/$epicId/milestones/': {
      id: '/epic/$epicId/milestones/'
      path: '/$epicId/milestones'
      fullPath: '/epic/$epicId/milestones'
      preLoaderRoute: typeof EpicEpicIdMilestonesIndexImport
      parentRoute: typeof EpicRouteImport
    }
  }
}

// Create and export the route tree

interface EpicRouteRouteChildren {
  EpicIndexRoute: typeof EpicIndexRoute
  EpicEpicIdIndexRoute: typeof EpicEpicIdIndexRoute
  EpicEpicIdEditIndexRoute: typeof EpicEpicIdEditIndexRoute
  EpicEpicIdMilestonesIndexRoute: typeof EpicEpicIdMilestonesIndexRoute
}

const EpicRouteRouteChildren: EpicRouteRouteChildren = {
  EpicIndexRoute: EpicIndexRoute,
  EpicEpicIdIndexRoute: EpicEpicIdIndexRoute,
  EpicEpicIdEditIndexRoute: EpicEpicIdEditIndexRoute,
  EpicEpicIdMilestonesIndexRoute: EpicEpicIdMilestonesIndexRoute,
}

const EpicRouteRouteWithChildren = EpicRouteRoute._addFileChildren(
  EpicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/epic': typeof EpicRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/epic/': typeof EpicIndexRoute
  '/epic/$epicId': typeof EpicEpicIdIndexRoute
  '/epic/$epicId/edit': typeof EpicEpicIdEditIndexRoute
  '/epic/$epicId/milestones': typeof EpicEpicIdMilestonesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/epic': typeof EpicIndexRoute
  '/epic/$epicId': typeof EpicEpicIdIndexRoute
  '/epic/$epicId/edit': typeof EpicEpicIdEditIndexRoute
  '/epic/$epicId/milestones': typeof EpicEpicIdMilestonesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/epic': typeof EpicRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/epic/': typeof EpicIndexRoute
  '/epic/$epicId/': typeof EpicEpicIdIndexRoute
  '/epic/$epicId/edit/': typeof EpicEpicIdEditIndexRoute
  '/epic/$epicId/milestones/': typeof EpicEpicIdMilestonesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/epic'
    | '/about'
    | '/epic/'
    | '/epic/$epicId'
    | '/epic/$epicId/edit'
    | '/epic/$epicId/milestones'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/epic'
    | '/epic/$epicId'
    | '/epic/$epicId/edit'
    | '/epic/$epicId/milestones'
  id:
    | '__root__'
    | '/'
    | '/epic'
    | '/about'
    | '/epic/'
    | '/epic/$epicId/'
    | '/epic/$epicId/edit/'
    | '/epic/$epicId/milestones/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EpicRouteRoute: typeof EpicRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EpicRouteRoute: EpicRouteRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/epic",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/epic": {
      "filePath": "epic/route.tsx",
      "children": [
        "/epic/",
        "/epic/$epicId/",
        "/epic/$epicId/edit/",
        "/epic/$epicId/milestones/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/epic/": {
      "filePath": "epic/index.tsx",
      "parent": "/epic"
    },
    "/epic/$epicId/": {
      "filePath": "epic/$epicId/index.tsx",
      "parent": "/epic"
    },
    "/epic/$epicId/edit/": {
      "filePath": "epic/$epicId/edit/index.tsx",
      "parent": "/epic"
    },
    "/epic/$epicId/milestones/": {
      "filePath": "epic/$epicId/milestones/index.tsx",
      "parent": "/epic"
    }
  }
}
ROUTE_MANIFEST_END */
